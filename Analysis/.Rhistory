kmer_freqs <- c(15,20,10,5)
chisq.test(kmer_freqs)
kmer_freqs_4 <- c(15,20,10,5)
chisq.test(kmer_freqs_4)
kmer_freqs_3 <- c(80,70,40,10)
chisq.test(kmer_freqs_3)
kmer_freqs_2 <- c(450,260,150,40)
chisq.test(kmer_freqs_2)
chisq.test(kmer_freqs_4,kmer_freqs_3)
chisq.test(table(kmer_freqs_4,kmer_freqs_3))
3_2_comp = table(kmer_freqs_4, kmer_freqs_3)
comp_3_2 <- table(kmer_freqs_4, kmer_freqs_3)
comp_3_2
rm(kmer_freqs)
rm(comp_3_2)
tot = sum(kmer_freqs_3)
print(cbind(kmer_freqs_4,kmer_freqs_3))
chisq.test(cbind(kmer_freqs_4,kmer_freqs_3))
chisq.test(cbind(kmer_freqs_3,kmer_freqs_2))
1-0.0858
1-0.3916
0.9142*200/400
0.6084*50/400
0.9142*80/200 + 0.0858*0.5
0.4571*80/200 + (1-0.4571)*0.5
0.07605*15/50 + (1-0.07605)*0.45429
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
ggplot(frqsSE, aes(x=Spacing, y=Count, colour=Mutation, group=Mutation)) +
#geom_errorbar(aes(ymin=Count-sd, ymax=Count+sd), colour="black", width=.02, position=pd) +
#geom_line(position=pd) +
#geom_point(position=pd, size=3, shape=21, fill="white") + # 21 is filled circle
geom_boxplot() +
xlab("Spacing (M)") +
ylab("Count") +
scale_colour_hue(name="Mutation",    # Legend label, use darker colors
breaks=c("1", "2"),
labels=c("Sur 0.86 Rep 0.06","Sur 0.70 Rep 0.15"),
l=40) +                    # Use darker colors, lightness=40
ggtitle("Final Average Mutation Frequencies by Spacing") +
expand_limits(y=0) +                        # Expand y range
# scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(0.34,0.01))               # Position legend in bottom right
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Spacing2Mut/SpacingPlot.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R')
rm(list=ls())
invFreq <- read.table(../Results/NeutralInversion/iMP-5.0n085Count.txt,sep='\t',header=TRUE)
invFreq <- read.table("../Results/NeutralInversion/iMP-5.0n085Count.txt",sep='\t',header=TRUE)
View(invFreq)
meanFinalCount <- tail(invFreq[,-1],n=1)
View(meanFinalCount)
meanFinalCount[,1]
mutFreq <- read.table("../Results/Spa.86.06.7.15e100InvShort/sS0.860rS0.060sB0.700rB0.150spacing0.000n007Mut.txt",sep='\t',header=TRUE)
View(mutFreq)
View(mutFreq)
invFreq <- read.table("../Results/NeutralInversion/iMP-8.0n085Count.txt",sep='\t',header=TRUE)
View(invFreq)
View(invFreq)
invFreq <- read.table("../Results/NeutralInversion/iMP-5.0n085Count.txt",sep='\t',header=TRUE)
View(meanFinalCount)
finalCounts <- meanFinalCount
meanFinalCount <- mean(finalCounts)
View(finalCounts)
View(finalCounts)
rowMeans(finalCounts)
meanFinalCount <- mean(unlist(finalCounts))
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
View(loadPowerTable)
colnames(loadPowerTable)[1]<-"Power"
colnames(loadPowerTable)
colnames(loadPowerTable)<-c("Power","Load")
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
loadPowerTable<-as.data.frame(loadPowerTable)
View(loadPowerTable)
View(loadPowerTable)
save(loadPowerTable,file="neutInvLoads.Rdata")
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
invChar <- read.table("../Results/NeutralInversion/iMP-5.0n085Char.txt",sep='\t',header=TRUE)
invChar[2,1]
invChar[2,2]
View(invChar)
View(invChar)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
View(mutFreq)
rm(list=ls())
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
View(loadPowerTable)
View(loadPowerTable)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
View(loadPowerTable)
View(loadPowerTable)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
loadPowerTable <- as.data.frame(loadPowerTable)
loadPowerTable$Power <- as.factor(loadPowerTable$Power)
loadPowerTable$Power
loadPowerTable$Power <- as.factor(loadPowerTable$Power)
loadPowerTable <- as.data.frame(unlist(loadPowerTable))
View(loadPowerTable)
View(loadPowerTable)
View(loadPowerTable)
invFreq <- read.table("../Results/NeutralInversion/iMP-3.0n085Count.txt",sep='\t',header=TRUE)
invChar <- read.table("../Results/NeutralInversion/iMP-3.0n085Char.txt",sep='\t',header=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
View(loadPowerTable)
testLoad <- getMeanLastGenInv(-3,"../Results/NeutralInversion/iMP-3.0n085Count.txt","../Results/NeutralInversion/iMP-3.0n085Char.txt")
testLoad
testTemp<-sum(unlist(tail(invFreq[,-1],n=1)))
testTemp<-tail(invFreq[,-1],n=1)
testTemp
testTemp<-unlist(tail(invFreq[,-1],n=1))
testTemp
sum(testTemp)
sum(testTemp[!=0])
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
testLoad <- getMeanLastGenInv(-3,"../Results/NeutralInversion/iMP-3.0n085Count.txt","../Results/NeutralInversion/iMP-3.0n085Char.txt")
testLoad <- getMeanLastGenInv(-3,"../Results/NeutralInversion/iMP-3.0n085Count.txt","../Results/NeutralInversion/iMP-3.0n085Char.txt")
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
testLoad <- getMeanLastGenInv(-3,"../Results/NeutralInversion/iMP-3.0n085Count.txt","../Results/NeutralInversion/iMP-3.0n085Char.txt")
getMeanLastGenInv <- function(power,countFileName,charFileName) {
invFreq <- read.table(countFileName,sep='\t',header=TRUE)
invChar <- read.table(charFileName,sep='\t',header=TRUE)
lastInvFreqs <- unlist(tail(invFreq[,-1],n=1))
sumExtant <- 0
sumLength <- 0
for (i in length(lastInvFreqs)) {
print(i)
numI <- as.integer(lastInvFreqs[i])
if (numI != 0 && numI != 2000) {
print(numI)
sumExtant <- sumExtant + numI
sumLength <- sumLength + numI*(invChar[i,2]-invChar[i,1])
}
}
# meanFinalCount <- c(power,sum(unlist(tail(invFreq[,-1],n=1)))/2000)
# print(meanFinalCount)
loadData <- c(power,sumExtant,sumLength)
return(loadData)
}
testLoad <- getMeanLastGenInv(-3,"../Results/NeutralInversion/iMP-3.0n085Count.txt","../Results/NeutralInversion/iMP-3.0n085Char.txt")
testTemp
clear()
testTemp <- unlist(tail(invFreq[,-1],n=1))
testTemp[1]
as.integer(testTemp[4])
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
testLoad <- getMeanLastGenInv(-3,"../Results/NeutralInversion/iMP-3.0n085Count.txt","../Results/NeutralInversion/iMP-3.0n085Char.txt")
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
testLoad <- getMeanLastGenInv(-3,"../Results/NeutralInversion/iMP-3.0n085Count.txt","../Results/NeutralInversion/iMP-3.0n085Char.txt")
testLoad
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R')
View(loadPowerTable)
View(loadPowerTable)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
loadPowerTable[AvgLen==NA]
loadPowerTable["AvgLen"==NA]
loadPowerTable["AvgLen"==0]
loadPowerTable["AvgLen"==NULL]
is.numeric(loadPowerTable$AvgLen)
is.numeric(loadPowerTable$AvgNum)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
ggplot(subset(loadPowerTable,Power==power), aes(x=AvgNum, y=AvgLen, group=Power)) +
geom_point(size=3, shape=1) + # 21 is filled circle
geom_smooth(method=lm) +  # Add linear regression line (w/95% default)
xlab("Average Number/Chromosome") +
ylab("Average Length/Chromosome") +
# scale_colour_hue(name="Mutation",    # Legend label, use darker colors
#                  breaks=c("1", "2"),
#                  labels=c("Sur 0.86 Rep 0.06","Sur 0.70 Rep 0.15"),
#                  l=40) +                    # Use darker colors, lightness=40
ggtitle(paste0("Polymorphic Inversions in 100 Replicates of 10^",str(power)," Mut Rate"),size=0.9) +
expand_limits(y=0) +                        # Expand y range
# scale_y_continuous(breaks=0:20*4) +         # Set tick every 4
theme_bw() +
theme(legend.justification=c(1,0),
legend.position=c(0.87,0.01))               # Position legend in bottom right
=0.9
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Neutral Inversion/NeutInv.R', echo=TRUE)
mean(loadPowerTable$MaxLen)
View(loadPowerTable)
source('~/Documents/Pool Lab/SAIsim/Analysis/Neutral Inversion/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Neutral Inversion/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Neutral Inversion/NeutInv.R', echo=TRUE)
source('~/Documents/Pool Lab/SAIsim/Analysis/Neutral Inversion/NeutInv.R', echo=TRUE)
